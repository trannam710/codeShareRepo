,Description,Code,Upload Date
0,Creating a Pandas DataFrame,"import pandas as pd

# Create a DataFrame
data = {""Name"": [""Alice"", ""Bob"", ""Charlie""], ""Age"": [25, 30, 35]}
df = pd.DataFrame(data)
print(df)",12-03-24 15:58
1,Plotting a bar chart using Matplotlib,"import matplotlib.pyplot as plt

# Sample data
categories = ['A', 'B', 'C', 'D', 'E']
values = [23, 45, 56, 78, 33]

# Plotting the bar chart
plt.bar(categories, values)

# Adding labels and title
plt.xlabel('Categories')
plt.ylabel('Values')
plt.title('Bar Chart Example')

# Displaying the plot
plt.show()",12-03-24 15:58
2,Plotting a line chart using Matplotlib,"import matplotlib.pyplot as plt

# Sample data
x_values = [1, 2, 3, 4, 5]
y_values = [10, 15, 13, 18, 16]

# Plotting the line chart
plt.plot(x_values, y_values, marker='o', linestyle='-')

# Adding labels and title
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Line Chart Example')

# Displaying the plot
plt.grid(True)  # Add grid
plt.show()",12-03-24 15:58
3,Plotting a scatter chart using Matplotlib,"import matplotlib.pyplot as plt

# Sample data
x_values = [1, 2, 3, 4, 5]
y_values = [10, 15, 13, 18, 16]

# Plotting the scatter chart
plt.scatter(x_values, y_values)

# Adding labels and title
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Scatter Chart Example')

# Displaying the plot
plt.grid(True)  # Add grid
plt.show()",12-03-24 15:58
4,Plotting a histogram chart using Matplotlib,"import pandas as pd
import matplotlib.pyplot as plt

# Sample DataFrame
data = {
    'values': [5, 10, 15, 10, 20, 25, 30, 35, 40, 45]
}

df = pd.DataFrame(data)

# Plotting the histogram
plt.hist(df['values'], bins=5, color='skyblue', edgecolor='black')

# Adding labels and title
plt.xlabel('Values')
plt.ylabel('Frequency')
plt.title('Histogram Example')

# Displaying the plot
plt.grid(True)  # Add grid
plt.show()",12-03-24 15:58
5,Plotting a pie chart using Matplotlib,"import pandas as pd
import matplotlib.pyplot as plt

# Sample DataFrame
data = {
    'category': ['A', 'B', 'C', 'D', 'E'],
    'values': [10, 20, 15, 25, 30]
}

df = pd.DataFrame(data)

# Plotting the pie chart
plt.figure(figsize=(8, 8))  # Set the figure size
plt.pie(df['values'], labels=df['category'], autopct='%1.1f%%', startangle=140)

# Adding title
plt.title('Pie Chart Example')

# Displaying the plot
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle
plt.show()",12-03-24 15:58
6,Plotting a box plot using Matplotlib,"import pandas as pd
import matplotlib.pyplot as plt

# Sample DataFrame
data = {
    'Category': ['A', 'A', 'B', 'B', 'C', 'C'],
    'Values': [10, 15, 20, 25, 30, 35]
}

df = pd.DataFrame(data)

# Plotting the box plot
plt.figure(figsize=(8, 6))  # Set the figure size
plt.boxplot([df[df['Category'] == 'A']['Values'], 
             df[df['Category'] == 'B']['Values'], 
             df[df['Category'] == 'C']['Values']], 
            labels=['A', 'B', 'C'])

# Adding title and labels
plt.xlabel('Category')
plt.ylabel('Values')
plt.title('Box Plot Example')

# Displaying the plot
plt.grid(True)  # Add grid
plt.show()",12-03-24 15:58
7,Plotting a tree map using Matplotlib,"import matplotlib.pyplot as plt
import squarify

# Sample data
sizes = [20, 30, 40, 10]
labels = [""A"", ""B"", ""C"", ""D""]

# Plotting the TreeMap
plt.figure(figsize=(8, 6))  # Set the figure size
squarify.plot(sizes=sizes, label=labels, alpha=0.7)

# Adding title
plt.title('TreeMap Example')

# Removing axes
plt.axis('off')

# Displaying the plot
plt.show()",12-03-24 15:58
8,Get max value of a field,"import pandas as pd

# Sample DataFrame
data = {
    'Category': ['A', 'A', 'B', 'B', 'C', 'C'],
    'Values': [10, 15, 20, 25, 30, 35]
}

df = pd.DataFrame(data)

# Get the maximum value from the 'Values' column
max_value = df['Values'].max()

print(""Maximum value:"", max_value)",12-03-24 15:58
9,Get max value between 2 fields,"import pandas as pd

# Sample DataFrame
data = {
    'field1': [10, 20, 30, 40],
    'field2': [15, 25, 35, 45]
}

df = pd.DataFrame(data)

# Get the maximum value between 'field1' and 'field2' for each row
max_values = df[['field1', 'field2']].max(axis=1)

print(max_values)",12-03-24 15:58
10,Get min value between 2 fields,"import pandas as pd

# Sample DataFrame
data = {
    'field1': [10, 20, 30, 40],
    'field2': [15, 25, 35, 45]
}

df = pd.DataFrame(data)

# Get the minimum value between 'field1' and 'field2' for each row
min_values = df[['field1', 'field2']].min(axis=1)

print(min_values)",12-03-24 15:58
11,Get min value of a field,"import pandas as pd

# Sample DataFrame
data = {
    'field1': [10, 20, 30, 40]
}

df = pd.DataFrame(data)

# Get the minimum value of 'field1'
min_value = df['field1'].min()

print(min_value)",12-03-24 15:58
12,Get summary statistics of numerical columns,"import pandas as pd

# Sample DataFrame
data = {
    'field1': [10, 20, 30, 40],
    'field2': [15, 25, 35, 45]
}

df = pd.DataFrame(data)

# Get summary statistics of numerical columns in the DataFrame
description = df.describe()

print(description)",12-03-24 15:58
13,Get mean of a field,"import pandas as pd

# Sample DataFrame
data = {
    'field1': [10, 20, 30, 40],
    'field2': [15, 25, 35, 45]
}

df = pd.DataFrame(data)

# Get the mean of 'field1'
mean_field1 = df['field1'].mean()

print(mean_field1)",12-03-24 15:58
14,Get median of a field,"import pandas as pd

# Sample DataFrame
data = {
    'field1': [10, 20, 30, 40],
    'field2': [15, 25, 35, 45]
}

df = pd.DataFrame(data)

# Get the median of 'field1'
median_field1 = df['field1'].median()

print(median_field1)",12-03-24 15:58
15,test,test,14-03-2024 15:56
